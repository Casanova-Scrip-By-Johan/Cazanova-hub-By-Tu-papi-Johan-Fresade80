local Players = game:GetService("Players")
local VirtualUser = game:GetService("VirtualUser")
local LocalPlayer = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Stats = game:GetService("Stats")

-- Anti-AFK (al inicio del script)
local function preventAFK()
    VirtualUser:Button2Down(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    task.wait(1)
    VirtualUser:Button2Up(Vector2.new(0, 0), workspace.CurrentCamera.CFrame)
    print("Anti-AFK: Prevented kick")
end

Players.LocalPlayer.Idled:Connect(preventAFK)
print("Anti-AFK ativado!")

-- *********************************************************************************************
-- *********************************************************************************************
-- IMPORTACIÓN DE LIBRERÍA (Asegúrate de que esta URL sea accesible y esté actualizada)
-- *********************************************************************************************
-- *********************************************************************************************
local library = loadstring(game:HttpGet("https://raw.githubusercontent.com/rafael25ic-blip/phoenix-cracked/refs/heads/main/Librerya%20Phoenix%20Crack"))()

local window = library:AddWindow("Cazanova || Team JX7 v2", {
    main_color = Color3.fromRGB(255, 102, 102), -- COLOR CAMBIADO A ROJO CLARO
    min_size = Vector2.new(650, 870),
    can_resize = true,
})

-- =============================================================================================
--                                      TAB: FARM OP
-- =============================================================================================

local AutoFarm = window:AddTab("Farm Op")

-- ********** STRENGTH OP (PING ALTO) **********
getgenv()._AutoRepFarmEnabledPingAlto = false  

AutoFarm:AddSwitch("Strength Op (Use it if your minimum ping is 250 ms)", function(state)
    getgenv()._AutoRepFarmEnabledPingAlto = state
    warn("[Auto Rep Farm ALTO] Estado cambiado a:", state and "ON" or "OFF")
end)

local function getPing()
    local success, ping = pcall(function()
        return Stats.Network.ServerStatsItem["Data Ping"]:GetValue()
    end)
    return success and ping or 999
end

local function eatProteinEgg()
    if LocalPlayer:FindFirstChild("Backpack") then
        for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == "ProteinEgg" then
                ReplicatedStorage.rEvents.eatEvent:FireServer("eat", item)
                break
            end
        end
    end
end

local function hitRock()
    local rock = workspace:FindFirstChild("Rock5M")
    local HumanoidRootPart = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if rock and HumanoidRootPart then
        HumanoidRootPart.CFrame = rock.CFrame * CFrame.new(0, 0, -5)
        ReplicatedStorage.rEvents.hitEvent:FireServer("hit", rock)
    end
end

task.spawn(function()
    local lastProteinEggTime = tick()
    local lastRockTime = tick()
    local farmingPaused = false
    local MAX_PING = 450   
    local MIN_PING = 250   
    local PROTEIN_EGG_INTERVAL = 30 * 60
    local ROCK_INTERVAL = 5
    local REPS_PER_CYCLE = 10
    local REP_DELAY = 0.01

    while true do
        if getgenv()._AutoRepFarmEnabledPingAlto then
            local ping = getPing()

            if ping > MAX_PING then
                if not farmingPaused then
                    warn("[Auto Rep Farm ALTO] Ping alto ("..math.floor(ping).."ms), pausando farmeo...")
                    farmingPaused = true
                end
            end

            if ping <= MIN_PING then
                if farmingPaused then
                    warn("[Auto Rep Farm ALTO] Ping bajo ("..math.floor(ping).."ms), reanudando farmeo...")
                    farmingPaused = false
                end
            end

            if not farmingPaused then
                if LocalPlayer:FindFirstChild("muscleEvent") then
                    for i = 1, REPS_PER_CYCLE do
                        LocalPlayer.muscleEvent:FireServer("rep")
                    end
                end

                if tick() - lastProteinEggTime >= PROTEIN_EGG_INTERVAL then
                    eatProteinEgg()
                    lastProteinEggTime = tick()
                end

                if tick() - lastRockTime >= ROCK_INTERVAL then
                    hitRock()
                    lastRockTime = tick()
                end
            end
        end
        task.wait(REP_DELAY)
    end
end)

-- ********** STRENGTH OP (PING BAJO) **********
getgenv()._AutoRepFarmEnabledPingBajo = false  

AutoFarm:AddSwitch("Strength Op (Use it if your minimum ping is less than 150 ms)", function(state)
    getgenv()._AutoRepFarmEnabledPingBajo = state
    warn("[Auto Rep Farm BAJO] Estado cambiado a:", state and "ON" or "OFF")
end)

task.spawn(function()
    local lastProteinEggTime = tick()
    local lastRockTime = tick()
    local farmingPaused = false
    local MAX_PING = 5000   
    local MIN_PING = 100   
    local PROTEIN_EGG_INTERVAL = 30 * 60
    local ROCK_INTERVAL = 5
    local REPS_PER_CYCLE = 40
    local REP_DELAY = 0.01

    while true do
        if getgenv()._AutoRepFarmEnabledPingBajo then
            local ping = getPing()

            if ping > MAX_PING then
                if not farmingPaused then
                    warn("[Auto Rep Farm BAJO] Ping muy alto ("..math.floor(ping).."ms), pausando farmeo...")
                    farmingPaused = true
                end
            end

            if ping <= MIN_PING then
                if farmingPaused then
                    warn("[Auto Rep Farm BAJO] Ping bajo ("..math.floor(ping).."ms), reanudando farmeo...")
                    farmingPaused = false
                end
            end

            if not farmingPaused then
                if LocalPlayer:FindFirstChild("muscleEvent") then
                    for i = 1, REPS_PER_CYCLE do
                        LocalPlayer.muscleEvent:FireServer("rep")
                    end
                end

                if tick() - lastProteinEggTime >= PROTEIN_EGG_INTERVAL then
                    eatProteinEgg()
                    lastProteinEggTime = tick()
                end

                if tick() - lastRockTime >= ROCK_INTERVAL then
                    hitRock()
                    lastRockTime = tick()
                end
            end
        end
        task.wait(REP_DELAY)
    end
end)

-- ********** AUTO EAT EGG 30 MINUTES **********
local autoEatEnabled = false

local function eatProteinEggDirect()
    local player = LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()

    local egg = backpack:FindFirstChild("Protein Egg") or backpack:FindFirstChild("ProteinEgg")
    if egg then
        -- Intentar la vía de equipar y activar para asegurar el uso
        local clone = egg:Clone()
        clone.Parent = character
        pcall(function()
            clone:Activate()
        end)
        clone:Destroy()
    end
end

task.spawn(function()
    while true do
        if autoEatEnabled then
            eatProteinEggDirect()
            task.wait(1800) -- 30 minutes
        else
            task.wait(1)
        end
    end
end)

AutoFarm:AddSwitch("Auto Eat Egg 30 Minuts", function(state)
    autoEatEnabled = state
end)

-- ********** SPIN FORTUNE WHEEL **********
AutoFarm:AddSwitch("Spin Fortune Wheel", function(state)
    _G.AutoSpinWheel = state
    if state then
        task.spawn(function()
            while _G.AutoSpinWheel and task.wait(0.1) do
                game:GetService("ReplicatedStorage").rEvents.openFortuneWheelRemote:InvokeServer(
                    "openFortuneWheel",
                    game:GetService("ReplicatedStorage").fortuneWheelChances["Fortune Wheel"]
                )
            end
        end)
    end
end)

-- ********** OPTIMIZATION **********
AutoFarm:AddSwitch("Hide All Frames", function(bool)
    for _, gui in pairs(LocalPlayer.PlayerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            gui.Enabled = not bool
        end
    end
end)

AutoFarm:AddButton("Anti Lag", function()
    local lighting = game:GetService("Lighting")
    lighting.GlobalShadows = false
    lighting.FogEnd = 9e9
    lighting.Brightness = 0
    settings().Rendering.QualityLevel = 1
 
    for _, v in pairs(game:GetDescendants()) do
        if v:IsA("ParticleEmitter") or v:IsA("Smoke") or v:IsA("Fire") or v:IsA("Sparkles") then
            v.Enabled = false
        elseif v:IsA("Decal") or v:IsA("Texture") then
            v.Transparency = 1
        end
    end
 
    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Anti Lag Activado",
        Text = "Optimización visual aplicada.",
        Duration = 5
    })
end)

AutoFarm:AddButton("Full Optimization", function()
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    local lighting = game:GetService("Lighting")

    for _, gui in pairs(playerGui:GetChildren()) do
        if gui:IsA("ScreenGui") then
            gui:Destroy() -- Destruye todas las GUIs
        end
    end

    local function darkenSky()
        for _, v in pairs(lighting:GetChildren()) do
            if v:IsA("Sky") then v:Destroy() end
        end
        local darkSky = Instance.new("Sky")
        darkSky.Name = "DarkSky"
        -- Configuración de cielo negro
        for _, prop in pairs({"SkyboxBk", "SkyboxDn", "SkyboxFt", "SkyboxLf", "SkyboxRt", "SkyboxUp"}) do
            darkSky[prop] = "rbxassetid://0"
        end
        darkSky.Parent = lighting
        lighting.Brightness = 0
        lighting.TimeOfDay = "00:00:00"
        lighting.OutdoorAmbient = Color3.new(0, 0, 0)
        lighting.Ambient = Color3.new(0, 0, 0)
        lighting.FogColor = Color3.new(0, 0, 0)
        lighting.FogEnd = 100
    end

    local function removeEffects(class)
        for _, obj in pairs(workspace:GetDescendants()) do
            if obj:IsA(class) then obj:Destroy() end
        end
    end

    removeEffects("ParticleEmitter")
    removeEffects("PointLight")
    removeEffects("SpotLight")
    removeEffects("SurfaceLight")
    darkenSky()

    game:GetService("StarterGui"):SetCore("SendNotification", {
        Title = "Optimización Completa",
        Text = "GUI, partículas y luz eliminados.",
        Duration = 5
    })
end)


-- ********** TELEPORTS & EQUIP **********
AutoFarm:AddButton("Equip Swift Samurai", function()
    local petsFolder = LocalPlayer:FindFirstChild("petsFolder")
    if not petsFolder then return end

    -- Desequipar todo
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)

    -- Equipar hasta 8 "Swift Samurai"
    local equipped = 0
    local maxEquip = 8
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                if pet.Name == "Swift Samurai" then
                    ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
                    equipped += 1
                    if equipped >= maxEquip then return end
                end
            end
        end
    end
end)

local function teleportAndInteract(pos)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local hrp = char:WaitForChild("HumanoidRootPart")
    hrp.CFrame = CFrame.new(pos)
    task.wait(0.2)
    -- Simular la pulsación de 'E'
    local VirtualInputManager = game:GetService("VirtualInputManager")
    VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.05)
    VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

AutoFarm:AddButton("Jungle Squat", function()
    teleportAndInteract(Vector3.new(-8371.4336, 6.7981, 2858.8853))
end)

AutoFarm:AddButton("Jungle lift", function()
    teleportAndInteract(Vector3.new(-8652.8672, 29.2667, 2089.2617))
end)

-- ********** FAST REBIRTHS **********
AutoFarm:AddLabel("Rebiths Gained").TextSize = 23

local fastStrengthFolder = AutoFarm:AddFolder("Fast Rebirths Functions")
local leaderstats = LocalPlayer:WaitForChild("leaderstats")
local rebirthsStat = leaderstats:WaitForChild("Rebirths")

local footerTimeLabel = fastStrengthFolder:AddLabel("0d 0h 0m 0s")
local footerRebirthsLabel = fastStrengthFolder:AddLabel("Rebirths: 0")
local footerRebirthsGainedLabel = fastStrengthFolder:AddLabel("Rebirths Gained: 0")

local startTime = tick()
local initialRebirths = rebirthsStat.Value

task.spawn(function()
    while true do
        local elapsed = tick() - startTime
        local days = math.floor(elapsed / 86400)
        local hours = math.floor((elapsed % 86400) / 3600)
        local minutes = math.floor((elapsed % 3600) / 60)
        local seconds = math.floor(elapsed % 60)
        footerTimeLabel.Text = string.format("%dd %dh %dm %ds", days, hours, minutes, seconds)
        task.wait(1)
    end
end)

local function updateRebirths()
    local current = rebirthsStat.Value
    local gained = current - initialRebirths
    footerRebirthsLabel.Text = "Rebirths: " .. current
    footerRebirthsGainedLabel.Text = "Rebirths Gained: " .. gained
end

rebirthsStat.Changed:Connect(updateRebirths)
updateRebirths()

getgenv().AutoFarming = false

local FarmPet = "Swift Samurai"
local RebirthPet = "Tribal Overlord"

local function equipPetByName(name)
    local petsFolder = LocalPlayer:FindFirstChild("petsFolder")
    if not petsFolder then return end
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                if pet.Name == name then
                    ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", pet)
                end
            end
        end
    end
end

local function unequipAllPets()
    local petsFolder = LocalPlayer:FindFirstChild("petsFolder")
    if not petsFolder then return end
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.1)
end

local function getGoldenRebirthCount()
    local ultimates = LocalPlayer:FindFirstChild("ultimatesFolder")
    if ultimates and ultimates:FindFirstChild("Golden Rebirth") then
        return ultimates["Golden Rebirth"].Value
    end
    return 0
end

local function getStrengthRequiredForRebirth()
    local rebirths = LocalPlayer.leaderstats.Rebirths.Value
    local baseStrength = 10000 + (5000 * rebirths)
    local golden = getGoldenRebirthCount()
    if golden >= 1 and golden <= 5 then
        baseStrength = baseStrength * (1 - golden * 0.1)
    end
    return math.floor(baseStrength)
end

fastStrengthFolder:AddSwitch("Fast Rebirth", function(state)
    getgenv().AutoFarming = state
    if state then
        task.spawn(function()
            while getgenv().AutoFarming do
                local requiredStrength = getStrengthRequiredForRebirth()
                
                -- Fase de farmeo
                unequipAllPets()
                equipPetByName(FarmPet)

                while LocalPlayer.leaderstats.Strength.Value < requiredStrength and getgenv().AutoFarming do
                    if LocalPlayer:FindFirstChild("muscleEvent") then
                        for _ = 1, 10 do
                            LocalPlayer.muscleEvent:FireServer("rep")
                        end
                    end
                    task.wait()
                end

                if not getgenv().AutoFarming then break end

                -- Fase de renacimiento
                unequipAllPets()
                equipPetByName(RebirthPet)

                local oldRebirths = LocalPlayer.leaderstats.Rebirths.Value
                repeat
                    ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    task.wait(0.1)
                until LocalPlayer.leaderstats.Rebirths.Value > oldRebirths or not getgenv().AutoFarming
            end
        end)
    end
end)

-- ********** REBIRTHS WITHOUT PACKS **********
local rebirthFolder = AutoFarm:AddFolder("Rebiths Without Packs")
local targetRebirthAmount = nil
local farmingTarget = false

rebirthFolder:AddTextBox("Target number of Rebirths", function(value)
    local amount = tonumber(value)
    if amount and amount >= rebirthsStat.Value then
        targetRebirthAmount = amount
    end
end, {clear = false})

local targetRebirthToggle = rebirthFolder:AddSwitch("Start", function(enabled)
    farmingTarget = enabled
    if enabled then
        task.spawn(function()
            while farmingTarget do
                local currentRebirths = rebirthsStat.Value
                local requiredStrength = 10000 + 5000 * currentRebirths

                if targetRebirthAmount and currentRebirths >= targetRebirthAmount then
                    targetRebirthToggle:Set(false)
                    farmingTarget = false
                    break
                end

                if leaderstats.Strength.Value >= requiredStrength then
                    ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    task.wait(0.7)
                else
                    if LocalPlayer:FindFirstChild("muscleEvent") then
                        for i = 1, 10 do -- Usamos 10 reps por simplicidad
                            LocalPlayer.muscleEvent:FireServer("rep")
                        end
                    end
                end

                task.wait(0.1)
            end
        end)
    end
end)

rebirthFolder:AddSwitch("Auto Teleport to the king", function(enabled)
    _G.AutoTeleportKing = enabled
    if enabled then
        local targetPosition = Vector3.new(-8750.1318359375, 124.37654876708984, -5861.2666015625)
        task.spawn(function()
            while _G.AutoTeleportKing do
                local char = LocalPlayer.Character
                if char then
                    local rootPart = char:FindFirstChild("HumanoidRootPart")
                    if rootPart then
                        rootPart.CFrame = CFrame.new(targetPosition)
                        rootPart.Velocity = Vector3.new(0, 0, 0)
                    end
                end
                task.wait(0.1)
            end
        end)
    end
end)

rebirthFolder:AddSwitch("Auto size 2", function(enabled)
    _G.AutoSize2 = enabled
    if enabled then
        task.spawn(function()
            while _G.AutoSize2 do
                local args = {"changeSize", 2}
                ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer(unpack(args))
                task.wait(1)
            end
        end)
    end
end)

-- ********** AUTO TOOLS **********
local autoEquipToolsFolder = AutoFarm:AddFolder("Auto Tools")

autoEquipToolsFolder:AddButton("Gamepass AutoLift", function()
    local gamepassFolder = ReplicatedStorage.gamepassIds
    local ownedGamepasses = LocalPlayer:FindFirstChild("ownedGamepasses")
    if ownedGamepasses then
        for _, gamepass in pairs(gamepassFolder:GetChildren()) do
            local value = Instance.new("IntValue")
            value.Name = gamepass.Name
            value.Value = gamepass.Value
            value.Parent = ownedGamepasses
        end
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Gamepass Desbloqueado",
            Text = "AutoLift activado localmente.",
            Duration = 3
        })
    end
end)

local function createAutoToolSwitch(toolName, globalVar)
    autoEquipToolsFolder:AddSwitch("Auto " .. toolName, function(Value)
        _G[globalVar] = Value
        
        if Value then
            local tool = LocalPlayer.Backpack:FindFirstChild(toolName)
            if tool then
                LocalPlayer.Character.Humanoid:EquipTool(tool)
            end
            task.spawn(function()
                while _G[globalVar] do
                    if not _G[globalVar] then break end
                    LocalPlayer.muscleEvent:FireServer("rep")
                    task.wait(0.1)
                end
            end)
        else
            local equipped = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(toolName)
            if equipped then equipped.Parent = LocalPlayer.Backpack end
        end
    end)
end

createAutoToolSwitch("Weight", "AutoWeight")
createAutoToolSwitch("Pushups", "AutoPushups")
createAutoToolSwitch("Handstands", "AutoHandstands")
createAutoToolSwitch("Situps", "AutoSitups")

autoEquipToolsFolder:AddSwitch("Auto Punch", function(Value)
    _G.fastHitActive = Value
    
    if Value then
        task.spawn(function()
            while _G.fastHitActive do
                if not _G.fastHitActive then break end
                local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
                if punch and not LocalPlayer.Character:FindFirstChild("Punch") then
                    punch.Parent = LocalPlayer.Character
                end
                if LocalPlayer.Character:FindFirstChild("Punch") and LocalPlayer.Character:FindFirstChild("Punch"):FindFirstChild("attackTime") then
                    LocalPlayer.Character.Punch.attackTime.Value = 0
                end
                LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                if LocalPlayer.Character:FindFirstChild("Punch") then
                    LocalPlayer.Character.Punch:Activate()
                end
                task.wait()
            end
        end)
    else
        local equipped = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Punch")
        if equipped then equipped.Parent = LocalPlayer.Backpack end
    end
end)

autoEquipToolsFolder:AddSwitch("Fast Tools", function(Value)
    _G.FastTools = Value
    local toolSettings = {
        {"Punch", "attackTime", Value and 0 or 0.35},
        {"Ground Slam", "attackTime", Value and 0 or 6},
        {"Stomp", "attackTime", Value and 0 or 7},
        {"Handstands", "repTime", Value and 0 or 1},
        {"Pushups", "repTime", Value and 0 or 1},
        {"Weight", "repTime", Value and 0 or 1},
        {"Situps", "repTime", Value and 0 or 1}
    }
    local backpack = LocalPlayer:WaitForChild("Backpack")
    for _, toolInfo in ipairs(toolSettings) do
        local function updateToolValue(tool)
            if tool and tool:FindFirstChild(toolInfo[2]) then
                tool[toolInfo[2]].Value = toolInfo[3]
            end
        end
        updateToolValue(backpack:FindFirstChild(toolInfo[1]))
        updateToolValue(LocalPlayer.Character and LocalPlayer.Character:FindFirstChild(toolInfo[1]))
    end
end)

-- =============================================================================================
--                                      TAB: STATS
-- =============================================================================================

local estadisticas = window:AddTab("Stats")
local SelectPlayerName = ""

local PlayerDrop = estadisticas:AddDropdown("Select Player", function(Value)
    SelectPlayerName = Value:match("| (.+)")
end)

local Playerslist = {}
for _, Plr in pairs(Players:GetPlayers()) do
    table.insert(Playerslist, Plr.DisplayName .. " | " .. Plr.Name)
end
for _, AddPlr in ipairs(Playerslist) do
    PlayerDrop:Add(AddPlr)
end

local function FormatNumberWithCommas(number)
    local formatted = tostring(number):reverse():gsub("(%d%d%d)", "%1,"):reverse()
    return formatted:gsub("^,", "")
end

local function FormatAbbreviated(number)
    local abbreviations = {"", "K", "M", "B", "T", "Qa", "Qi"}
    local abbreviationIndex = 1
    local num = number
    while num >= 1000 do
        num = num / 1000
        abbreviationIndex = abbreviationIndex + 1
    end
    return string.format("%.2f", num) .. abbreviations[abbreviationIndex]
end

local function FormatDisplay(value)
    local numValue = tonumber(value) or 0
    local normal = FormatNumberWithCommas(numValue)
    local abbreviated = FormatAbbreviated(numValue)
    return "[ " .. normal .. " | " .. abbreviated .. " ]"
end

local Update = estadisticas:AddLabel("")
local Update1 = estadisticas:AddLabel("")
local Update2 = estadisticas:AddLabel("")
local Update3 = estadisticas:AddLabel("")
local Update4 = estadisticas:AddLabel("")
local Update5 = estadisticas:AddLabel("")
local Update6 = estadisticas:AddLabel("")
local Update9 = estadisticas:AddLabel("")
local Update10 = estadisticas:AddLabel("")
local Update11 = estadisticas:AddLabel("")
local Update12 = estadisticas:AddLabel("")
local Update13 = estadisticas:AddLabel("")

task.spawn(function()
    while task.wait(0) do
        if SelectPlayerName ~= "" then
            local player = Players:FindFirstChild(SelectPlayerName)
            if player then
                Update1.Text = "Gems: " .. FormatDisplay(player.Gems and player.Gems.Value or 0)
                Update3.Text = "Agility: " .. FormatDisplay(player.Agility and player.Agility.Value or 0)
                Update4.Text = "Durability: " .. FormatDisplay(player.Durability and player.Durability.Value or 0)
                Update6.Text = "Muscle King Time: " .. FormatDisplay(player.muscleKingTime and player.muscleKingTime.Value or 0)
                Update10.Text = "Custom Size: " .. FormatDisplay(player.customSize and player.customSize.Value or 0)
                Update11.Text = "Custom Speed: " .. FormatDisplay(player.customSpeed and player.customSpeed.Value or 0)
                Update12.Text = "Evil Karma: " .. FormatDisplay(player.evilKarma and player.evilKarma.Value or 0)
                Update13.Text = "Good Karma: " .. FormatDisplay(player.goodKarma and player.goodKarma.Value or 0)

                local leaderstats = player:FindFirstChild("leaderstats")
                if leaderstats then
                    Update.Text = "Strength: " .. FormatDisplay(leaderstats.Strength and leaderstats.Strength.Value or 0)
                    Update2.Text = "Rebirth: " .. FormatDisplay(leaderstats.Rebirths and leaderstats.Rebirths.Value or 0)
                    Update5.Text = "Kills: " .. FormatDisplay(leaderstats.Kills and leaderstats.Kills.Value or 0)
                end

                Update9.Text = "Current Map: " .. tostring(player.currentMap and player.currentMap.Value or "Aucune donnée")
            end
        end
    end
end)

-- Advanced Stats
estadisticas:AddLabel("————————————————————————————")
estadisticas:AddLabel("stats advanced:").TextSize = 24

local enemyHealthLabel = estadisticas:AddLabel("vida del enemigo: N/A")
local playerDamageLabel = estadisticas:AddLabel("Tu daño: N/A")
local hitsToKillLabel = estadisticas:AddLabel("Golpes para matarlo: N/A")

local function calculateEnemyHealth(targetPlayer)
    if not targetPlayer then return 0 end
    local baseDura = targetPlayer.Durability and targetPlayer.Durability.Value or 0
    local totalMultiplier = 1
    local ultFolder = targetPlayer:FindFirstChild("ultimatesFolder")
    if ultFolder then
        local infernalHealth = ultFolder:FindFirstChild("Infernal Health")
        if infernalHealth then totalMultiplier = totalMultiplier + 0.15 * (infernalHealth.Value or 0) end
    end
    -- Mascotas de Durabilidad (Mighty Monster)
    local equippedPets = targetPlayer.Backpack and targetPlayer.Backpack:FindFirstChild("EquippedPets")
    if equippedPets then
        for _, pet in ipairs(equippedPets:GetChildren()) do
            if string.lower(tostring(pet.Name)):match("mighty monster") then
                totalMultiplier = totalMultiplier + 0.5
                break
            end
        end
    end
    return baseDura * totalMultiplier
end

local function calculateLocalPlayerDamage()
    local strengthStat = LocalPlayer.leaderstats and LocalPlayer.leaderstats:FindFirstChild("Strength")
    if not strengthStat then return 0 end
    local baseDamage = strengthStat.Value * 0.0667
    local totalMultiplier = 1
    local ultFolder = LocalPlayer:FindFirstChild("ultimatesFolder")
    if ultFolder then
        local demonDamage = ultFolder:FindFirstChild("Demon Damage")
        if demonDamage then totalMultiplier = totalMultiplier + math.min(0.1 * (demonDamage.Value or 0), 0.5) end
    end
    -- Mascotas de Daño (Wild Wizard)
    local equippedPets = LocalPlayer.Backpack and LocalPlayer.Backpack:FindFirstChild("EquippedPets")
    if equippedPets then
        for _, pet in ipairs(equippedPets:GetChildren()) do
            if string.lower(tostring(pet.Name)):match("wild wizard") then
                totalMultiplier = totalMultiplier + 0.5
                break
            end
        end
    end
    return baseDamage * totalMultiplier
end

local function calculateHitsToKill(health, damage)
    if damage <= 0 then return "∞" end
    local hits = math.ceil(health / damage)
    return hits > 50 and "∞" or hits < 1 and 1 or hits
end

local function updateAdvancedStats(targetPlayer)
    if not targetPlayer then
        enemyHealthLabel.Text = "vida del enemigo: N/A"
        playerDamageLabel.Text = "Tu daño: N/A"
        hitsToKillLabel.Text = "Golpes para matarlo: N/A"
        return
    end
    local enemyHealth = calculateEnemyHealth(targetPlayer)
    local playerDamage = calculateLocalPlayerDamage()
    local hitsToKill = calculateHitsToKill(enemyHealth, playerDamage)
    enemyHealthLabel.Text = "vida del enemigo: " .. FormatDisplay(enemyHealth)
    playerDamageLabel.Text = "Tu daño: " .. FormatDisplay(playerDamage)
    hitsToKillLabel.Text = "Golpes para matarlo: " .. tostring(hitsToKill)
end

task.spawn(function()
    while true do
        local selectedPlayer = Players:FindFirstChild(SelectPlayerName)
        if selectedPlayer then
            updateAdvancedStats(selectedPlayer)
        else
            updateAdvancedStats(nil)
        end
        task.wait(0.2)
    end
end)

-- =============================================================================================
--                                      TAB: KILL
-- =============================================================================================

local Killer = window:AddTab("Kill")

local playerWhitelist = {}
local targetPlayerNames = {}
local autoGoodKarma = false
local autoBadKarma = false
local autoKill = false
local killTarget = false
local godModeToggle = false
local godDamageActive = false
local following = false
local followTarget = nil

-- ********** GOD MODE **********
local godModeToggle = false
Killer:AddSwitch("God mode", function(State)
    godModeToggle = State
    if State then
        task.spawn(function()
            while godModeToggle do
                game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                task.wait()
            end
        end)
    end
end)

-- ********** AUTO SLAMS **********
local godDamageActive = false
Killer:AddSwitch("auto slams", function(state)
    godDamageActive = state
    if state then
        task.spawn(function()
            while godDamageActive do
                local player = LocalPlayer
                local groundSlam = player.Backpack:FindFirstChild("Ground Slam") or (player.Character and player.Character:FindFirstChild("Ground Slam"))
                if groundSlam then
                    if groundSlam.Parent == player.Backpack then
                        groundSlam.Parent = player.Character
                    end
                    if groundSlam:FindFirstChild("attackTime") then
                        groundSlam.attackTime.Value = 0
                    end
                    player.muscleEvent:FireServer("slam")
                    groundSlam:Activate()
                end
                task.wait(0.1)
            end
        end)
    end
end)

-- ********** PET SELECTION **********
Killer:AddLabel("Select damage or durability pet").TextSize = 18

local petDropdown = Killer:AddDropdown("Select Pet", function(text)
    local petsFolder = LocalPlayer.petsFolder
    for _, folder in pairs(petsFolder:GetChildren()) do
        if folder:IsA("Folder") then
            for _, pet in pairs(folder:GetChildren()) do
                ReplicatedStorage.rEvents.equipPetEvent:FireServer("unequipPet", pet)
            end
        end
    end
    task.wait(0.2)

    local petsToEquip = {}
    for _, pet in pairs(petsFolder.Unique:GetChildren()) do
        if pet.Name == text then
            table.insert(petsToEquip, pet)
        end
    end

    local maxPets = 8
    local equippedCount = math.min(#petsToEquip, maxPets)

    for i = 1, equippedCount do
        ReplicatedStorage.rEvents.equipPetEvent:FireServer("equipPet", petsToEquip[i])
        task.wait(0.1)
    end
end)

petDropdown:Add("Wild Wizard") -- Daño
petDropdown:Add("Mighty Monster") -- Durability

-- ********** AUTO KARMA **********
local function handleAutoKarma(karmaType)
    return function(bool)
        if karmaType == "good" then autoGoodKarma = bool else autoBadKarma = bool end
        task.spawn(function()
            while (karmaType == "good" and autoGoodKarma) or (karmaType == "bad" and autoBadKarma) do
                local char = LocalPlayer.Character
                local rh = char and char:FindFirstChild("RightHand")
                local lh = char and char:FindFirstChild("LeftHand")
                if char and rh and lh then
                    for _, target in ipairs(Players:GetPlayers()) do
                        if target ~= LocalPlayer and target.Character then
                            local evil = target:FindFirstChild("evilKarma")
                            local good = target:FindFirstChild("goodKarma")
                            local condition = (karmaType == "good" and evil and good and evil.Value > good.Value) or 
                                              (karmaType == "bad" and evil and good and good.Value > evil.Value)
                            
                            if condition then
                                local rootPart = target.Character:FindFirstChild("HumanoidRootPart")
                                if rootPart then
                                    firetouchinterest(rh, rootPart, 1)
                                    firetouchinterest(lh, rootPart, 1)
                                    firetouchinterest(rh, rootPart, 0)
                                    firetouchinterest(lh, rootPart, 0)
                                end
                            end
                        end
                    end
                end
                task.wait(0.01)
            end
        end)
    end
end

Killer:AddSwitch("Auto Good Karma", handleAutoKarma("good"))
Killer:AddSwitch("Auto Bad Karma", handleAutoKarma("bad"))

-- ********** WHITELIST **********
Killer:AddSwitch("Auto Whitelist Friends", function(state)
    -- Lógica de Whitelist de Amigos
    local friendWhitelistActive = state
    if state then
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and LocalPlayer:IsFriendsWith(player.UserId) then
                playerWhitelist[player.Name] = true
            end
        end

        Players.PlayerAdded:Connect(function(player)
            if friendWhitelistActive and player ~= LocalPlayer and LocalPlayer:IsFriendsWith(player.UserId) then
                playerWhitelist[player.Name] = true
            end
        end)
    else
        for name in pairs(playerWhitelist) do
            local friend = Players:FindFirstChild(name)
            if friend and LocalPlayer:IsFriendsWith(friend.UserId) then
                playerWhitelist[name] = nil
            end
        end
    end
end)

Killer:AddTextBox("Whitelist", function(text)
    local target = Players:FindFirstChild(text)
    if target then playerWhitelist[target.Name] = true end
end)

Killer:AddTextBox("UnWhitelist", function(text)
    local target = Players:FindFirstChild(text)
    if target then playerWhitelist[target.Name] = nil end
end)

-- ********** AUTO KILL **********
Killer:AddSwitch("Auto Kill", function(bool)
    autoKill = bool
    task.spawn(function()
        while autoKill do
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local rh = char:FindFirstChild("RightHand")
            local lh = char:FindFirstChild("LeftHand")
            local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
            if punch and not char:FindFirstChild("Punch") then punch.Parent = char end

            if rh and lh then
                for _, target in ipairs(Players:GetPlayers()) do
                    if target ~= LocalPlayer and not playerWhitelist[target.Name] and target.Character then
                        local rootPart = target.Character:FindFirstChild("HumanoidRootPart")
                        if rootPart then
                            pcall(function()
                                firetouchinterest(rh, rootPart, 1); firetouchinterest(lh, rootPart, 1)
                                firetouchinterest(rh, rootPart, 0); firetouchinterest(lh, rootPart, 0)
                            end)
                        end
                    end
                end
            end
            task.wait(0.05)
        end
    end)
end)

-- ********** START KILL TARGET **********
local targetDropdownItems = {}
local targetDropdown = Killer:AddDropdown("Select Target", function(displayName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.DisplayName == displayName then
            if not table.find(targetPlayerNames, player.Name) then
                table.insert(targetPlayerNames, player.Name)
            end
            break
        end
    end
end)

Killer:AddButton("Remove Selected Target", function()
    -- Lógica para remover objetivo
    local currentDisplayName = targetDropdown:GetCurrent()
    local targetName = nil
    for name, disp in pairs(targetDropdownItems) do
        if disp == currentDisplayName then targetName = name; break end
    end

    if targetName then
        for i = #targetPlayerNames, 1, -1 do
            if targetPlayerNames[i] == targetName then
                table.remove(targetPlayerNames, i)
                break
            end
        end
    end
end)

-- Llenar/actualizar Dropdown de Targets
local function updateTargetDropdown()
    targetDropdown:Clear()
    targetDropdownItems = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            targetDropdown:Add(player.DisplayName)
            targetDropdownItems[player.Name] = player.DisplayName
        end
    end
end
Players.PlayerAdded:Connect(updateTargetDropdown)
Players.PlayerRemoving:Connect(updateTargetDropdown)
updateTargetDropdown()

Killer:AddSwitch("Start Kill Target", function(state)
    killTarget = state
    task.spawn(function()
        while killTarget do
            local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
            local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
            if punch and not char:FindFirstChild("Punch") then punch.Parent = char end
            local rh = char:FindFirstChild("RightHand")
            local lh = char:FindFirstChild("LeftHand")

            if rh and lh then
                for _, name in ipairs(targetPlayerNames) do
                    local target = Players:FindFirstChild(name)
                    if target and target ~= LocalPlayer and target.Character then
                        local rootPart = target.Character:FindFirstChild("HumanoidRootPart")
                        local humanoid = target.Character:FindFirstChild("Humanoid")
                        if rootPart and humanoid and humanoid.Health > 0 then
                            pcall(function()
                                firetouchinterest(rh, rootPart, 1); firetouchinterest(lh, rootPart, 1)
                                firetouchinterest(rh, rootPart, 0); firetouchinterest(lh, rootPart, 0)
                            end)
                        end
                    end
                end
            end
            task.wait(0.05)
        end
    end)
end)

-- ********** SELECT VIEW TARGET **********
local spyTargetDropdownItems = {}
local spyTargetDropdown = Killer:AddDropdown("Select View Target", function(displayName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.DisplayName == displayName then
            SelectPlayerName = player.Name -- Usamos la variable de la pestaña Stats
            break
        end
    end
end)
-- Llenar/actualizar Dropdown de Spy (Stats)
local function updateSpyDropdown()
    spyTargetDropdown:Clear()
    spyTargetDropdownItems = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            spyTargetDropdown:Add(player.DisplayName)
            spyTargetDropdownItems[player.Name] = player.DisplayName
        end
    end
end
Players.PlayerAdded:Connect(updateSpyDropdown)
Players.PlayerRemoving:Connect(updateSpyDropdown)
updateSpyDropdown()

-- ********** TELEPORT PLAYER / FOLLOW **********
local function followPlayer(targetPlayer)
    local myChar = LocalPlayer.Character
    local targetChar = targetPlayer.Character
    if not (myChar and targetChar) then return end
    local myHRP = myChar:FindFirstChild("HumanoidRootPart")
    local targetHRP = targetChar:FindFirstChild("HumanoidRootPart")

    if myHRP and targetHRP then
        local followPos = targetHRP.Position - (targetHRP.CFrame.LookVector * 3)
        myHRP.CFrame = CFrame.new(followPos, targetHRP.Position)
    end
end

local followDropdown = Killer:AddDropdown("Teleport player", function(selectedDisplayName)
    if selectedDisplayName and selectedDisplayName ~= "" then
        local target = nil
        for _, plr in ipairs(Players:GetPlayers()) do
            if plr.DisplayName == selectedDisplayName then
                target = plr
                break
            end
        end

        if target then
            followTarget = target.Name
            following = true
            followPlayer(target)
        end
    end
end)

-- Llenar/actualizar Dropdown de Teleport
local function updateFollowDropdown()
    followDropdown:Clear()
    for _, plr in ipairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer then followDropdown:Add(plr.DisplayName) end
    end
end
Players.PlayerAdded:Connect(updateFollowDropdown)
Players.PlayerRemoving:Connect(updateFollowDropdown)
updateFollowDropdown()

Killer:AddButton("Dejar de Seguir", function()
    following = false
    followTarget = nil
    print("🚫 Stopped following")
end)

task.spawn(function()
    while task.wait(0.01) do
        if following and followTarget then
            local target = Players:FindFirstChild(followTarget)
            if target then
                followPlayer(target)
            else
                following = false
                followTarget = nil
            end
        end
    end
end)

LocalPlayer.CharacterAdded:Connect(function()
    task.wait(1)
    if following and followTarget then
        local target = Players:FindFirstChild(followTarget)
        if target then
            followPlayer(target)
        end
    end
end)
